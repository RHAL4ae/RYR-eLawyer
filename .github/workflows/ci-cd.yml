name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '*/10 * * * *'   # Every 10 minutes

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, bcmath, xml, gd, pdo, pdo_mysql, zip
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --no-progress
      - name: Install NPM dependencies
        run: npm install

  lint-and-style:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: PHP Code Style (PHP_CodeSniffer)
        run: vendor/bin/phpcs --standard=PSR12 app/
      - name: PHP Static Analysis (PHPStan)
        run: vendor/bin/phpstan analyse
      - name: JS/TS Lint (ESLint)
        run: npx eslint resources/js/
      - name: JS/TS Format (Prettier)
        run: npx prettier --check "resources/js/**/*.{js,ts,vue}"

  security:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Composer Security Audit
        run: composer audit || true
      - name: NPM Security Audit
        run: npm audit --audit-level=high || true
      - name: Snyk Open Source Security
        uses: snyk/actions@v4
        continue-on-error: true
        with:
          command: test

  tests:
    runs-on: ubuntu-latest
    needs: [setup, lint-and-style, security]
    env:
      DB_CONNECTION: sqlite
      DB_DATABASE: ':memory:'
      CACHE_DRIVER: array
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: array
      MAIL_MAILER: log
    steps:
      - uses: actions/checkout@v4
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
      - name: Copy .env.example
        run: cp .env.example .env
      - name: Generate App Key
        run: php artisan key:generate
      - name: Migrate Database
        run: php artisan migrate --force
      - name: Run Laravel PHPUnit Tests
        run: vendor/bin/phpunit --coverage-text
      - name: Run JS/Vue Jest Tests
        run: npx jest --coverage

  build-artifacts:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - name: Build Frontend (Vue)
        run: npm run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ryrelawyer-artifacts-${{ github.run_number }}
          path: |
            public/build
            storage/app/public
            bootstrap/cache

  deploy:
    runs-on: ubuntu-latest
    needs: build-artifacts
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to Production Server
        # Replace with your own deployment action or script (rsync, ssh, S3, etc.)
        run: echo "Deploy step: add your production deploy script here."

  notify:
    runs-on: ubuntu-latest
    needs: [tests, build-artifacts, deploy]
    if: always()
    steps:
      - name: Notify Team (Slack/Email)
        run: echo "Notify step: send summary/report via Slack or email."
